{
  "openapi": "3.0.2",
  "info": {
    "title": "fake-merchant",
    "version": "1.0.0"
  },
  "paths": {
    "/product": {
      "summary": "List of avaliable products in this merchant",
      "description": "The products are avaliable to be changed in methods like add new itens, delete, update and all itens can be searched to be displayed in the API.",
      "get": {
        "responses": {
          "200": {
            "$ref": "#/components/responses/FindProduct"
          },
          "400": {
            "$ref": "#/components/responses/NotFoundProduct"
          }
        },
        "operationId": "findById",
        "summary": "Mehod to see a product",
        "description": "Method to find a product by id"
      },
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              },
              "examples": {
                "samepleProductUpdate": {
                  "value": {
                    "id": 74,
                    "name": "some text",
                    "price": 24.04
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CreatedProduct"
          }
        },
        "operationId": "updatedeById",
        "summary": "Update",
        "description": "Update the info of an product"
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProduct"
              },
              "examples": {
                "Request": {
                  "value": {
                    "name": "some text",
                    "price": 81.52
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/CreatedProduct"
          }
        },
        "operationId": "create",
        "summary": "Creating a new product",
        "description": "Method to create a new product"
      },
      "delete": {
        "parameters": [
          {
            "examples": {
              "DeleteSample": {
                "value": "97"
              }
            },
            "name": "DeleteId",
            "description": "",
            "schema": {
              "type": "integer"
            },
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted"
          }
        },
        "operationId": "deleteById",
        "summary": "Delete a product",
        "description": "Delete a product by his Id"
      }
    },
    "/": {
      "summary": "The root of the merchant",
      "description": "This path have the purpouse to show all the content without the Id filter",
      "get": {
        "responses": {
          "200": {
            "description": "List of all avaliable itens"
          }
        },
        "operationId": "findAll",
        "summary": "Find all itens",
        "description": "Method to see all the itens in the merchant"
      }
    }
  },
  "components": {
    "schemas": {
      "CreateProduct": {
        "title": "Root Type for CreateProduct",
        "description": "The data required to create a new product",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "price": {
            "format": "double",
            "type": "number"
          }
        },
        "example": {
          "name": "produtoX",
          "price": 99.9
        }
      },
      "Product": {
        "title": "Root Type for Product",
        "description": "The data we have about a product",
        "type": "object",
        "properties": {
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "format": "double",
            "type": "number"
          }
        },
        "example": {
          "id": 1,
          "name": "produtoX",
          "price": 99.9
        }
      }
    },
    "responses": {
      "CreatedProduct": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Product"
            },
            "examples": {
              "Response": {
                "value": {
                  "id": 1,
                  "name": "produtoX",
                  "price": 99.9
                }
              }
            }
          }
        },
        "description": "Response when the new product was created"
      },
      "FindProduct": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Product"
            },
            "examples": {
              "foundProduct": {
                "value": {
                  "id": 1,
                  "name": "produtoX",
                  "price": 99.9
                }
              }
            }
          }
        },
        "description": "Response when the method find have success"
      },
      "NotFoundProduct": {
        "content": {
          "application/json": {
            "schema": {
              "type": "string"
            },
            "examples": {
              "NotFound": {
                "value": "The product with this id doesn't exist"
              }
            }
          }
        },
        "description": "Response when the method find fails"
      }
    }
  }
}